[{"/Users/kerly.pereda/Documents/projects/search_engine/src/App.js":"1","/Users/kerly.pereda/Documents/projects/search_engine/src/reportWebVitals.js":"2","/Users/kerly.pereda/Documents/projects/search_engine/src/index.js":"3","/Users/kerly.pereda/Documents/projects/search_engine/src/Containers/Home/index.js":"4","/Users/kerly.pereda/Documents/projects/search_engine/src/Components/Button/index.js":"5","/Users/kerly.pereda/Documents/projects/search_engine/src/Components/Footer/index.js":"6","/Users/kerly.pereda/Documents/projects/search_engine/src/Containers/SearchSection/index.js":"7","/Users/kerly.pereda/Documents/projects/search_engine/src/Components/TextInput/index.js":"8","/Users/kerly.pereda/Documents/projects/search_engine/src/Redux/searchReducer.js":"9","/Users/kerly.pereda/Documents/projects/search_engine/src/Redux/actions.js":"10","/Users/kerly.pereda/Documents/projects/search_engine/src/Components/Dropdown/index.js":"11","/Users/kerly.pereda/Documents/projects/search_engine/src/Api/searchAPI.js":"12","/Users/kerly.pereda/Documents/projects/search_engine/src/Containers/ResultsSection/index.js":"13","/Users/kerly.pereda/Documents/projects/search_engine/src/Components/Loader/index.js":"14","/Users/kerly.pereda/Documents/projects/search_engine/src/Redux/store.js":"15"},{"size":292,"mtime":1607368764406,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1607358480117,"results":"18","hashOfConfig":"17"},{"size":478,"mtime":1607363192823,"results":"19","hashOfConfig":"17"},{"size":395,"mtime":1607393032299,"results":"20","hashOfConfig":"17"},{"size":408,"mtime":1607372460518,"results":"21","hashOfConfig":"17"},{"size":229,"mtime":1607372221581,"results":"22","hashOfConfig":"17"},{"size":1428,"mtime":1607397091729,"results":"23","hashOfConfig":"17"},{"size":494,"mtime":1607533131785,"results":"24","hashOfConfig":"17"},{"size":750,"mtime":1607534804852,"results":"25","hashOfConfig":"17"},{"size":2875,"mtime":1607397236494,"results":"26","hashOfConfig":"17"},{"size":713,"mtime":1607525723937,"results":"27","hashOfConfig":"17"},{"size":912,"mtime":1607394579654,"results":"28","hashOfConfig":"17"},{"size":1305,"mtime":1607407805253,"results":"29","hashOfConfig":"17"},{"size":189,"mtime":1607393426963,"results":"30","hashOfConfig":"17"},{"size":246,"mtime":1607367518206,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7t1itg",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kerly.pereda/Documents/projects/search_engine/src/App.js",[],"/Users/kerly.pereda/Documents/projects/search_engine/src/reportWebVitals.js",[],"/Users/kerly.pereda/Documents/projects/search_engine/src/index.js",[],["65","66"],"/Users/kerly.pereda/Documents/projects/search_engine/src/Containers/Home/index.js",[],"/Users/kerly.pereda/Documents/projects/search_engine/src/Components/Button/index.js",[],"/Users/kerly.pereda/Documents/projects/search_engine/src/Components/Footer/index.js",[],"/Users/kerly.pereda/Documents/projects/search_engine/src/Containers/SearchSection/index.js",[],"/Users/kerly.pereda/Documents/projects/search_engine/src/Components/TextInput/index.js",[],"/Users/kerly.pereda/Documents/projects/search_engine/src/Redux/searchReducer.js",["67"],"import { actionTypes } from './actions'\n\nexport const initialState = {\n  value: '',\n  engine: 'google',\n  fetching: false,\n  results: []\n}\n\nexport default function (state = initialState, action) {\n  const { payload, type } = action\n\n  switch (type) {\n    case actionTypes.updateSearchValue:\n      return {\n        ...state,\n        value: payload\n      }\n\n    case actionTypes.updateSearchEngine:\n      return {\n        ...state,\n        engine: payload\n      }\n\n    case actionTypes.searchStart:\n      return {\n        ...state,\n        fetching: true,\n        results: []\n      }\n\n    case actionTypes.searchComplete:\n      return {\n        ...state,\n        fetching: false,\n        results: payload\n      }\n\n    default:\n      return state\n  }\n}\n","/Users/kerly.pereda/Documents/projects/search_engine/src/Redux/actions.js",["68"],"import { searchGoogleAPI, searchBingAPI } from '../Api/searchAPI'\n\nexport const actionTypes = {\n  updateSearchValue: 'UPDATE_SEARCH_VALUE',\n  updateSearchEngine: 'UPDATE_SEARCH_ENGINE',\n  searchStart: 'SEARCH_START',\n  searchComplete: 'SEARCH_COMPLETE'\n}\n\nconst updateSearchValue = (newValue) => {\n  return {\n    type: actionTypes.updateSearchValue,\n    payload: newValue\n  }\n}\n\nconst updateSearchEngine = (newValue) => {\n  return {\n    type: actionTypes.updateSearchEngine,\n    payload: newValue\n  }\n}\n\nconst searchStart = () => {\n  return {\n    type: actionTypes.searchStart,\n    payload: true\n  }\n}\n\nconst searchGoogle = (searchValue) => {\n  return (dispatch) => {\n    dispatch(searchStart())\n\n    if (!((searchValue || '').trim())) {\n      return dispatch({\n        type: actionTypes.searchComplete,\n        payload: []\n      })\n    }\n\n    return searchGoogleAPI(searchValue).then(response => {\n      const { data } = response\n      const results = data?.results || []\n\n      return dispatch({\n        type: actionTypes.searchComplete,\n        payload: formatResults(results, 'google')\n      })\n    })\n  }\n}\n\nconst searchBing = (searchValue) => {\n  return (dispatch) => {\n    dispatch(searchStart())\n\n    if (!((searchValue || '').trim())) {\n      return dispatch({\n        type: actionTypes.searchComplete,\n        payload: []\n      })\n    }\n\n    return searchBingAPI(searchValue).then(response => {\n      const { data } = response\n      const results = data?.webPages?.value || []\n\n      return dispatch({\n        type: actionTypes.searchComplete,\n        payload: formatResults(results, 'bing')\n      })\n    })\n  }\n}\n\nconst searchAllEngines = (searchValue) => {\n  return (dispatch) => {\n    dispatch(searchStart())\n\n    if (!((searchValue || '').trim())) {\n      return dispatch({\n        type: actionTypes.searchComplete,\n        payload: []\n      })\n    }\n\n    return Promise.all([\n      searchGoogleAPI(searchValue),\n      searchBingAPI(searchValue),\n\n    ]).then((responses) => {\n      const { data: googleData } = responses[0]\n      const googleResults = googleData?.results || []\n\n      const { data: bingData } = responses[1]\n      const bingResults = bingData?.webPages?.value || []\n\n      return dispatch({\n        type: actionTypes.searchComplete,\n        payload: [\n          ...formatResults(googleResults, 'google'),\n          ...formatResults(bingResults, 'bing')\n        ]\n      })\n    })\n  }\n}\n\nexport default {\n  updateSearchValue,\n  updateSearchEngine,\n  searchGoogle,\n  searchBing,\n  searchAllEngines\n}\n\nfunction formatResults (apiResults, typeOfSearch) {\n  return apiResults.map((item) => {\n    if (typeOfSearch === 'bing') {\n      return {\n        title: item.name,\n        description: item.snippet,\n        url: item.url\n      }\n    }\n\n    return {\n      title: item.title,\n      description: item.description,\n      url: item.link\n    }\n  })\n}\n","/Users/kerly.pereda/Documents/projects/search_engine/src/Components/Dropdown/index.js",[],"/Users/kerly.pereda/Documents/projects/search_engine/src/Api/searchAPI.js",[],"/Users/kerly.pereda/Documents/projects/search_engine/src/Containers/ResultsSection/index.js",[],"/Users/kerly.pereda/Documents/projects/search_engine/src/Components/Loader/index.js",[],"/Users/kerly.pereda/Documents/projects/search_engine/src/Redux/store.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":10,"column":1,"nodeType":"75","endLine":43,"endColumn":2},{"ruleId":"73","severity":1,"message":"76","line":110,"column":1,"nodeType":"75","endLine":116,"endColumn":2},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]